{"version":3,"sources":["../src/parse-url.js"],"names":["PROTOCOL_RE","window","base","String","location","url","Error","exec","isSecure","rest","join"],"mappings":";;;;;;;;AAAA;;AAEA;;AAEA,IAAMA,cAAc,iCAApB;;kBAEe,eAAO;AACpB;AACA,MAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;AACjC,QAAMC,OAAOC,OAAOF,OAAOG,QAAd,CAAb;AACAC,UAAMA,MACF,kBAAWH,IAAX,EAAiBG,GAAjB,CADE,GAEFH,IAFJ;AAGD,GALD,MAKO,IAAI,CAACG,GAAL,EAAU;AACf,UAAM,IAAIC,KAAJ,CAAU,wBAAV,CAAN;AACD;;AAED;AACA;;AAZoB,0BAaON,YAAYO,IAAZ,CAAiBF,GAAjB,CAbP;AAAA;AAAA,MAaXG,QAbW;AAAA,MAaDC,IAbC;;AAcpB,SAAO,CAAC,IAAD,EAAOD,YAAY,EAAnB,EAAuB,KAAvB,EAA8BC,IAA9B,EAAoCC,IAApC,CAAyC,EAAzC,CAAP;AACD,C","file":"parse-url.js","sourcesContent":["import {resolve as resolveUrl} from 'url'\n\n// ===================================================================\n\nconst PROTOCOL_RE = /^(?:(?:http|ws)(s)?:\\/\\/)?(.+)$/\n\nexport default url => {\n  // Resolve the URL against the current URL if any.\n  if (typeof window !== 'undefined') {\n    const base = String(window.location)\n    url = url\n      ? resolveUrl(base, url)\n      : base\n  } else if (!url) {\n    throw new Error('cannot get current URL')\n  }\n\n  // Prepends the protocol if missing and replace HTTP by WS if\n  // necessary.\n  const [, isSecure, rest] = PROTOCOL_RE.exec(url)\n  return ['ws', isSecure || '', '://', rest].join('')\n}\n"]}